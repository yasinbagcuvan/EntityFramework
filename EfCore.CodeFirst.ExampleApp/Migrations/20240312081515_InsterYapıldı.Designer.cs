// <auto-generated />
using System;
using EfCore.CodeFirst.ExampleApp.Context.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCore.CodeFirst.ExampleApp.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20240312081515_InsterYapıldı")]
    partial class InsterYapıldı
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerNumber"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerNumber");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Çalışan Adı 1",
                            Surname = "Çalışan Soyadı 1",
                            Title = "Reyon Çalışanı"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Çalışan Adı 2",
                            Surname = "Çalışan Soyadı 2",
                            Title = "Ürün Çalışanı"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Çalışan Adı 3",
                            Surname = "Çalışan Soyadı 3",
                            Title = "Satış Çalışanı"
                        });
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeesInfo");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Birthdate = new DateOnly(1990, 1, 2),
                            Email = "mail@mail.com",
                            EmployeeId = 0,
                            Phone = "0123456789"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateOnly(1995, 5, 6),
                            Email = "info@mail.com",
                            EmployeeId = 0,
                            Phone = "987654321"
                        });
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.OrderShipping", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ShippingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SppingStatus")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ShippingId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("ShippingId");

                    b.ToTable("ShippingDetails");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Yok",
                            IsActive = true,
                            Name = "Product 1 ",
                            Price = 12.00m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            Description = "Yok",
                            IsActive = true,
                            Name = "Product 2 ",
                            Price = 17.00m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 3,
                            Description = "Yok",
                            IsActive = true,
                            Name = "Product 3 ",
                            Price = 9.00m,
                            Stock = 42
                        });
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shippings");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.EmployeeInfo", b =>
                {
                    b.HasOne("EfCore.CodeFirst.ExampleApp.Context.Entities.Employee", "Employee")
                        .WithOne("EmployeeInfo")
                        .HasForeignKey("EfCore.CodeFirst.ExampleApp.Context.Entities.EmployeeInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Order", b =>
                {
                    b.HasOne("EfCore.CodeFirst.ExampleApp.Context.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCore.CodeFirst.ExampleApp.Context.Entities.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.OrderDetail", b =>
                {
                    b.HasOne("EfCore.CodeFirst.ExampleApp.Context.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCore.CodeFirst.ExampleApp.Context.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.OrderShipping", b =>
                {
                    b.HasOne("EfCore.CodeFirst.ExampleApp.Context.Entities.Order", "Order")
                        .WithOne("OrderShipping")
                        .HasForeignKey("EfCore.CodeFirst.ExampleApp.Context.Entities.OrderShipping", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCore.CodeFirst.ExampleApp.Context.Entities.Shipping", "Shipping")
                        .WithMany("OrderShippings")
                        .HasForeignKey("ShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Shipping");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeInfo")
                        .IsRequired();

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("OrderShipping");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EfCore.CodeFirst.ExampleApp.Context.Entities.Shipping", b =>
                {
                    b.Navigation("OrderShippings");
                });
#pragma warning restore 612, 618
        }
    }
}
